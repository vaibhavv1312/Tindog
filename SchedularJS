document.addEventListener('DOMContentLoaded', function () {
    const addEventBtn = document.getElementById('addEventBtn');
    const scheduleContainer = document.getElementById('schedule-table');
    const eventModal = document.getElementById('eventModal');
    const eventForm = document.getElementById('eventForm');
  
    addEventBtn.addEventListener('click', openModal);
    eventForm.addEventListener('submit', addEvent);
    scheduleContainer.addEventListener('click', handleDelete);
  
    const closeBtn = document.querySelector('.close');
    closeBtn.addEventListener('click', closeModal);
  
    function openModal() {
      eventModal.style.display = 'block';
    }
  
    function closeModal() {
      eventModal.style.display = 'none';
    }
  
    function findCell(day, startTime, endTime) {
        const rows = document.querySelectorAll('tbody tr');
        const dayIndex = getDayIndex(day);
    
        if (dayIndex !== -1) {
            const cells = rows[dayIndex].querySelectorAll('td');
            const startTimeIndex = getTimeIndex(startTime);
            const endTimeIndex = getTimeIndex(endTime);
    
            if (startTimeIndex !== -1 && endTimeIndex !== -1) {
                // Assuming endTime is greater than startTime
                const startCell = cells[startTimeIndex];
                const endCell = cells[endTimeIndex];
                return startCell;
            }
        }
    
        throw new Error(`Cell not found for ${day} ${startTime} - ${endTime}`);
    }
    
       
    
    
    
    // Usage in addEvent function
    function addEvent(event) {
        event.preventDefault();
      
        // Retrieve form data
        const day = document.getElementById('day').value;
        const startTime = document.getElementById('startTime').value;
        const endTime = document.getElementById('endTime').value;
        const eventName = document.getElementById('eventName').value;
      
        // Create a new event box
        const eventBox = document.createElement('div');
        eventBox.className = 'event';
        eventBox.innerHTML = `<strong>${eventName}</strong><br>${startTime} - ${endTime}
            <button class="delete-btn">Delete</button>`;
      
        // Calculate the position and dimensions of the event box
        const dayIndex = getDayIndex(day);
      
        if (dayIndex !== -1) {
          try {
            const cell = findCell(day, startTime, endTime);
      
            // Calculate the position of the event box within the cell
            const cellRect = cell.getBoundingClientRect();
            const startTimeIndex = getTimeIndex(startTime);
            const endTimeIndex = getTimeIndex(endTime);
            const cellWidth = cellRect.width;
            
            // Calculate the width and left position of the event box
            const eventWidth = (endTimeIndex - startTimeIndex) * (cellWidth / 24); // Adjust based on your time scale
            const eventLeft = startTimeIndex * (cellWidth / 24);
      
            // Set the position and dimensions of the event box
            eventBox.style.position = 'absolute';
            eventBox.style.left = eventLeft + 'px';
            eventBox.style.width = eventWidth + 'px';
            eventBox.style.height = cellRect.height + 'px';
      
            // Append the event box to the cell
            cell.appendChild(eventBox);
      
            // Close the modal after adding the event
            closeModal();
          } catch (error) {
            console.error(error);
          }
        } else {
          alert('Invalid day input!');
        }
    }
      
      
      
    
      
  
    function handleDelete(event) {
      const target = event.target;
      if (target.classList.contains('delete-btn')) {
        const eventBox = target.parentElement;
        eventBox.remove();
      }
    }
  
    function getDayIndex(day) {
      const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
      return days.indexOf(day);
    }
  
    function getTimeIndex(time) {
      const [hours, minutes] = time.split(':').map(Number);
      return hours * 60 + minutes;
    }
  
});
  
